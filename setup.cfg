[metadata]
name = relion
version = 0.13.14
description = Relion Python API
long_description = file: README.rst
author = Diamond Light Source - Scientific Software et al.
author_email = scientificsoftware@diamond.ac.uk
license = GPLv2
license_files = LICENSE
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    License :: OSI Approved :: GNU General Public License v2 (GPLv2)
    Natural Language :: English
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
keywords = relion
project_urls =
    Documentation = https://python-relion.readthedocs.io/
    GitHub = https://github.com/DiamondLightSource/python-relion
    Bug-Tracker = https://github.com/DiamondLightSource/python-relion/issues

[options]
include_package_data = True
install_requires =
    gemmi
    htcondor
    importlib_metadata
    ispyb
    marshmallow-sqlalchemy
    matplotlib
    mrcfile
    numpy
    opencv-python-headless
    pandas
    pillow
    plotly
    pydantic ==1.10.7
    pyyaml
    starfile
    workflows
    zocalo
packages = find:
package_dir =
    =src
python_requires = >=3.8
zip_safe = False

[options.entry_points]
console_scripts =
    relipy.job = relion.cli.current_job:run
    relipy.show = relion.cli.pipeline_viewer:run
    relipy.run_pipeline = relion.cli.run_pipeline:run
    relipy.run_refine_pipeline = relion.cli.refine_pipeline:run
    relipy.print_options = relion.cli.print_default_options:run
    relipy.link = relion.cli.project_linker:run
    external_job_cryolo = relion.cryolo_relion_it.cryolo_external_job:main
    external_job_cryolo_fine_tune = relion.cryolo_relion_it.cryolo_fine_tune_job:main
    external_job_mask_soft_edge = relion.cryolo_relion_it.mask_soft_edge_external_job:main
    external_job_select_and_split = relion.cryolo_relion_it.select_and_split_external_job:main
    external_job_reconstruct_halves = relion.cryolo_relion_it.reconstruct_halves_external_job:main
    external_job_fsc_fitting = relion.cryolo_relion_it.fsc_fitting_external_job:main
    combine_star_files = relion._parser.combine_star_files:main
libtbx.precommit =
    relion = relion
workflows.services =
    RelionStopService = relion.zocalo.service:RelionStopService
    ClusterSubmission = relion.zocalo.cluster_submission:ClusterSubmission
    CrYOLO = relion.zocalo.cryolo:CrYOLO
    CTFFind = relion.zocalo.ctffind:CTFFind
    Denoise = relion.zocalo.denoise:Denoise
    Extract = relion.zocalo.extract:Extract
    IceBreaker = relion.zocalo.icebreaker:IceBreaker
    Images = relion.zocalo.images:Images
    ISPyB = relion.zocalo.ispyb_service:EMISPyB
    MotionCor = relion.zocalo.motioncorr:MotionCorr
    MotionCorWilson = relion.zocalo.motioncorr_wilson:MotionCorrWilson
    SelectClasses = relion.zocalo.select_classes:SelectClasses
    SelectParticles = relion.zocalo.select_particles:SelectParticles
    NodeCreator = relion.zocalo.node_creator:NodeCreator
    TomoAlign = relion.zocalo.tomo_align:TomoAlign
    TomoAlignIris = relion.zocalo.tomo_align_iris:TomoAlignIris
    
zocalo.wrappers =
    relion = relion.zocalo.wrapper:RelionWrapper
    Class2D = relion.zocalo.class2d_wrapper:Class2DWrapper
    Class3D = relion.zocalo.class3d_wrapper:Class3DWrapper
zocalo.services.cluster.schedulers =
    grid_engine = relion.zocalo.cluster_submission:submit_to_grid_engine
    htcondor = relion.zocalo.cluster_submission:submit_to_htcondor
    slurm = relion.zocalo.cluster_submission:submit_to_slurm
zocalo.services.dispatcher.filters =
    ispyb = relion.zocalo.ispyb_recipe_tools:ispyb_filter
zocalo.services.dispatcher.ready_for_processing =
    ispyb = relion.zocalo.ispyb_recipe_tools:ready_for_processing
zocalo.services.images.plugins =
    mrc_to_jpeg = relion.zocalo.images_service_plugin:mrc_to_jpeg
    picked_particles = relion.zocalo.images_service_plugin:picked_particles
    mrc_central_slice = relion.zocalo.images_service_plugin:mrc_central_slice
    mrc_to_apng = relion.zocalo.images_service_plugin:mrc_to_apng

ccpem_pipeliner.jobs = 
    combine_star_files_job = relion._parser.combine_star_job:ProcessStarFiles

[options.packages.find]
where = src

[flake8]
# Black disagrees with flake8 on a few points. Ignore those.
ignore = E203, E266, E501, W503
# E203 whitespace before ':'
# E266 too many leading '#' for block comment
# E501 line too long
# W503 line break before binary operator

max-line-length = 88

select =
    E401,E711,E712,E713,E714,E721,E722,E901,
    F401,F402,F403,F405,F541,F631,F632,F633,F811,F812,F821,F822,F841,F901,
    W191,W291,W292,W293,W602,W603,W604,W605,W606,
    # flake8-comprehensions, https://github.com/adamchainz/flake8-comprehensions
    C4,
